// Generated by view binder compiler. Do not edit!
package com.example.kotlinlesson2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.kotlinlesson2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DetailFragmentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView description;

  @NonNull
  public final TextView detailDate;

  @NonNull
  public final TextView detailGenre;

  @NonNull
  public final ImageView detailImg;

  @NonNull
  public final TextView detailName;

  @NonNull
  public final FrameLayout loadingLayout;

  @NonNull
  public final LinearLayout mainViewDetail;

  private DetailFragmentBinding(@NonNull LinearLayout rootView, @NonNull TextView description,
      @NonNull TextView detailDate, @NonNull TextView detailGenre, @NonNull ImageView detailImg,
      @NonNull TextView detailName, @NonNull FrameLayout loadingLayout,
      @NonNull LinearLayout mainViewDetail) {
    this.rootView = rootView;
    this.description = description;
    this.detailDate = detailDate;
    this.detailGenre = detailGenre;
    this.detailImg = detailImg;
    this.detailName = detailName;
    this.loadingLayout = loadingLayout;
    this.mainViewDetail = mainViewDetail;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DetailFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DetailFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.detail_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DetailFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.detail_date;
      TextView detailDate = ViewBindings.findChildViewById(rootView, id);
      if (detailDate == null) {
        break missingId;
      }

      id = R.id.detail_genre;
      TextView detailGenre = ViewBindings.findChildViewById(rootView, id);
      if (detailGenre == null) {
        break missingId;
      }

      id = R.id.detail_img;
      ImageView detailImg = ViewBindings.findChildViewById(rootView, id);
      if (detailImg == null) {
        break missingId;
      }

      id = R.id.detail_name;
      TextView detailName = ViewBindings.findChildViewById(rootView, id);
      if (detailName == null) {
        break missingId;
      }

      id = R.id.loading_layout;
      FrameLayout loadingLayout = ViewBindings.findChildViewById(rootView, id);
      if (loadingLayout == null) {
        break missingId;
      }

      id = R.id.main_view_detail;
      LinearLayout mainViewDetail = ViewBindings.findChildViewById(rootView, id);
      if (mainViewDetail == null) {
        break missingId;
      }

      return new DetailFragmentBinding((LinearLayout) rootView, description, detailDate,
          detailGenre, detailImg, detailName, loadingLayout, mainViewDetail);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
